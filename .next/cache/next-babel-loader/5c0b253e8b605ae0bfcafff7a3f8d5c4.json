{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/charlesdoiron/Sites/societer/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport Post from \"../components/post.js\";\n\nvar client = require(\"contentful\").createClient({\n  space: \"86i03dw6wwwc\",\n  accessToken: \"fs65wT3qwmrz2Rcyh0fFkJE2uukw1N5mxY9_IzljpH0\"\n});\n\nfunction HomePage() {\n  function fetchContentTypes() {\n    var types;\n    return _regeneratorRuntime.async(function fetchContentTypes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(client.getContentTypes());\n\n          case 2:\n            types = _context.sent;\n\n            if (!types.items) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", types.items);\n\n          case 5:\n            console.log(\"Error getting Content Types.\");\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function fetchEntriesForContentType(contentType) {\n    var entries;\n    return _regeneratorRuntime.async(function fetchEntriesForContentType$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(client.getEntries({\n              content_type: contentType.sys.id\n            }));\n\n          case 2:\n            entries = _context2.sent;\n\n            if (!entries.items) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", entries.items);\n\n          case 5:\n            console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    function getPosts() {\n      var contentTypes, allPosts;\n      return _regeneratorRuntime.async(function getPosts$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(fetchContentTypes());\n\n            case 2:\n              contentTypes = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(fetchEntriesForContentType(contentTypes[0]));\n\n            case 5:\n              allPosts = _context3.sent;\n              setPosts(_toConsumableArray(allPosts));\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    }\n\n    getPosts();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Next.js + Contentful\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://css.zeit.sh/v1.css\",\n    type: \"text/css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), posts.length > 0 ? posts.map(function (p) {\n    return __jsx(Post, {\n      alt: p.fields.alt,\n      date: p.fields.date,\n      key: p.fields.title,\n      image: p.fields.image,\n      title: p.fields.title,\n      url: p.fields.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  }) : null);\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/charlesdoiron/Sites/societer/pages/index.js"],"names":["useEffect","useState","Head","Post","client","require","createClient","space","accessToken","HomePage","fetchContentTypes","getContentTypes","types","items","console","log","fetchEntriesForContentType","contentType","getEntries","content_type","sys","id","entries","name","posts","setPosts","getPosts","contentTypes","allPosts","length","map","p","fields","alt","date","title","image","url"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAChDC,EAAAA,KAAK,EAAE,cADyC;AAEhDC,EAAAA,WAAW,EAAE;AAFmC,CAAnC,CAAf;;AAKA,SAASC,QAAT,GAAoB;AAClB,WAAeC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACsBN,MAAM,CAACO,eAAP,EADtB;;AAAA;AACQC,YAAAA,KADR;;AAAA,iBAEMA,KAAK,CAACC,KAFZ;AAAA;AAAA;AAAA;;AAAA,6CAE0BD,KAAK,CAACC,KAFhC;;AAAA;AAGEC,YAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,WAAeC,0BAAf,CAA0CC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACwBb,MAAM,CAACc,UAAP,CAAkB;AACtCC,cAAAA,YAAY,EAAEF,WAAW,CAACG,GAAZ,CAAgBC;AADQ,aAAlB,CADxB;;AAAA;AACQC,YAAAA,OADR;;AAAA,iBAIMA,OAAO,CAACT,KAJd;AAAA;AAAA;AAAA;;AAAA,8CAI4BS,OAAO,CAACT,KAJpC;;AAAA;AAKEC,YAAAA,OAAO,CAACC,GAAR,qCAAyCE,WAAW,CAACM,IAArD;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPkB,kBAeQtB,QAAQ,CAAC,EAAD,CAfhB;AAAA,MAeXuB,KAfW;AAAA,MAeJC,QAfI;;AAiBlBzB,EAAAA,SAAS,CAAC,YAAM;AACd,aAAe0B,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC6BhB,iBAAiB,EAD9C;;AAAA;AACQiB,cAAAA,YADR;AAAA;AAAA,+CAEyBX,0BAA0B,CAACW,YAAY,CAAC,CAAD,CAAb,CAFnD;;AAAA;AAEQC,cAAAA,QAFR;AAGEH,cAAAA,QAAQ,oBAAKG,QAAL,EAAR;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAF,IAAAA,QAAQ;AACT,GAPQ,EAON,EAPM,CAAT;AASA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,4BAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASGF,KAAK,CAACK,MAAN,GAAe,CAAf,GACGL,KAAK,CAACM,GAAN,CAAU,UAAAC,CAAC;AAAA,WACT,MAAC,IAAD;AACE,MAAA,GAAG,EAAEA,CAAC,CAACC,MAAF,CAASC,GADhB;AAEE,MAAA,IAAI,EAAEF,CAAC,CAACC,MAAF,CAASE,IAFjB;AAGE,MAAA,GAAG,EAAEH,CAAC,CAACC,MAAF,CAASG,KAHhB;AAIE,MAAA,KAAK,EAAEJ,CAAC,CAACC,MAAF,CAASI,KAJlB;AAKE,MAAA,KAAK,EAAEL,CAAC,CAACC,MAAF,CAASG,KALlB;AAME,MAAA,GAAG,EAAEJ,CAAC,CAACC,MAAF,CAASK,GANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAAA,GAAX,CADH,GAWG,IApBN,CADF;AAwBD;;AAED,eAAe5B,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport Post from \"../components/post.js\";\n\nconst client = require(\"contentful\").createClient({\n  space: \"86i03dw6wwwc\",\n  accessToken: \"fs65wT3qwmrz2Rcyh0fFkJE2uukw1N5mxY9_IzljpH0\"\n});\n\nfunction HomePage() {\n  async function fetchContentTypes() {\n    const types = await client.getContentTypes();\n    if (types.items) return types.items;\n    console.log(\"Error getting Content Types.\");\n  }\n\n  async function fetchEntriesForContentType(contentType) {\n    const entries = await client.getEntries({\n      content_type: contentType.sys.id\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    async function getPosts() {\n      const contentTypes = await fetchContentTypes();\n      const allPosts = await fetchEntriesForContentType(contentTypes[0]);\n      setPosts([...allPosts]);\n    }\n    getPosts();\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Next.js + Contentful</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://css.zeit.sh/v1.css\"\n          type=\"text/css\"\n        />\n      </Head>\n      {posts.length > 0\n        ? posts.map(p => (\n            <Post\n              alt={p.fields.alt}\n              date={p.fields.date}\n              key={p.fields.title}\n              image={p.fields.image}\n              title={p.fields.title}\n              url={p.fields.url}\n            />\n          ))\n        : null}\n    </>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}