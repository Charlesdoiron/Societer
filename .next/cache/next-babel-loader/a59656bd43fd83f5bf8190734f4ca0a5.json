{"ast":null,"code":"var _jsxFileName = \"/Users/charlesdoiron/Sites/societer/pages/proposition.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport styled from \"styled-components\";\nimport { Subtitle, FatTitle } from \"../styled/typos\";\nimport { Wrapper } from \"../styled/space\";\nimport { useMocks } from \"../context/mock-context\";\n\nconst client = require(\"contentful\").createClient({\n  space: \"86i03dw6wwwc\",\n  accessToken: \"fs65wT3qwmrz2Rcyh0fFkJE2uukw1N5mxY9_IzljpH0\"\n});\n\nfunction Proposition() {\n  const {\n    proposition\n  } = useMocks();\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Societer | la Proposition\")), __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Titles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Subtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, proposition.subtitle), __jsx(FatTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, proposition.title))));\n}\n\nexport default Proposition;\nconst Container = styled.div.withConfig({\n  displayName: \"proposition__Container\",\n  componentId: \"sc-5zfhpn-0\"\n})([\"height:100vh;\"]);\nconst BackgroundImage = styled.div.withConfig({\n  displayName: \"proposition__BackgroundImage\",\n  componentId: \"sc-5zfhpn-1\"\n})([\"background-image:url(\\\"images/home/bkg_prehome.jpg\\\");width:100%;height:100vh;background-position:center;background-size:cover;background-repeat:no-repeat;position:absolute;top:0;\"]);\nconst Titles = styled.div.withConfig({\n  displayName: \"proposition__Titles\",\n  componentId: \"sc-5zfhpn-2\"\n})([\"width:100%;z-index:10;position:absolute;top:50%;h1{width:50%;}h3{color:\", \";}\"], props => props.theme.colors.white); // async function fetchContentTypes() {\n//   const types = await client.getContentTypes();\n//   if (types.items) return types.items;\n//   console.log(\"Error getting Content Types.\");\n// }\n// async function fetchEntriesForContentType(contentType) {\n//   const entries = await client.getEntries({\n//     content_type: contentType.sys.id\n//   });\n//   if (entries.items) return entries.items;\n//   console.log(`Error getting Entries for ${contentType.name}.`);\n// }\n// const [posts, setPosts] = useState([]);\n// useEffect(() => {\n//   async function getPosts() {\n//     const contentTypes = await fetchContentTypes();\n//     const allPosts = await fetchEntriesForContentType(contentTypes[0]);\n//     setPosts([...allPosts]);\n//   }\n//   getPosts();\n// }, []);","map":{"version":3,"sources":["/Users/charlesdoiron/Sites/societer/pages/proposition.js"],"names":["useEffect","useState","Head","styled","Subtitle","FatTitle","Wrapper","useMocks","client","require","createClient","space","accessToken","Proposition","proposition","subtitle","title","Container","div","BackgroundImage","Titles","props","theme","colors","white"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,iBAAnC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAChDC,EAAAA,KAAK,EAAE,cADyC;AAEhDC,EAAAA,WAAW,EAAE;AAFmC,CAAnC,CAAf;;AAKA,SAASC,WAAT,GAAuB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAkBP,QAAQ,EAAhC;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF,EAKE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWO,WAAW,CAACC,QAAvB,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWD,WAAW,CAACE,KAAvB,CAFF,CADF,CALF,CADF;AAcD;;AAED,eAAeH,WAAf;AAEA,MAAMI,SAAS,GAAGd,MAAM,CAACe,GAAV;AAAA;AAAA;AAAA,qBAAf;AAIA,MAAMC,eAAe,GAAGhB,MAAM,CAACe,GAAV;AAAA;AAAA;AAAA,2LAArB;AAWA,MAAME,MAAM,GAAGjB,MAAM,CAACe,GAAV;AAAA;AAAA;AAAA,sFASCG,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,KAT7B,CAAZ,C,CAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\n\nimport styled from \"styled-components\";\nimport { Subtitle, FatTitle } from \"../styled/typos\";\nimport { Wrapper } from \"../styled/space\";\n\nimport { useMocks } from \"../context/mock-context\";\n\nconst client = require(\"contentful\").createClient({\n  space: \"86i03dw6wwwc\",\n  accessToken: \"fs65wT3qwmrz2Rcyh0fFkJE2uukw1N5mxY9_IzljpH0\"\n});\n\nfunction Proposition() {\n  const { proposition } = useMocks();\n\n  return (\n    <Container>\n      <Head>\n        <title>Societer | la Proposition</title>\n      </Head>\n\n      <Wrapper>\n        <Titles>\n          <Subtitle>{proposition.subtitle}</Subtitle>\n          <FatTitle>{proposition.title}</FatTitle>\n        </Titles>\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default Proposition;\n\nconst Container = styled.div`\n  height: 100vh;\n`;\n\nconst BackgroundImage = styled.div`\n  background-image: url(\"images/home/bkg_prehome.jpg\");\n  width: 100%;\n  height: 100vh;\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  position: absolute;\n  top: 0;\n`;\n\nconst Titles = styled.div`\n  width: 100%;\n  z-index: 10;\n  position: absolute;\n  top: 50%;\n  h1 {\n    width: 50%;\n  }\n  h3 {\n    color: ${props => props.theme.colors.white};\n  }\n`;\n\n// async function fetchContentTypes() {\n//   const types = await client.getContentTypes();\n//   if (types.items) return types.items;\n//   console.log(\"Error getting Content Types.\");\n// }\n\n// async function fetchEntriesForContentType(contentType) {\n//   const entries = await client.getEntries({\n//     content_type: contentType.sys.id\n//   });\n//   if (entries.items) return entries.items;\n//   console.log(`Error getting Entries for ${contentType.name}.`);\n// }\n\n// const [posts, setPosts] = useState([]);\n\n// useEffect(() => {\n//   async function getPosts() {\n//     const contentTypes = await fetchContentTypes();\n//     const allPosts = await fetchEntriesForContentType(contentTypes[0]);\n//     setPosts([...allPosts]);\n//   }\n//   getPosts();\n// }, []);\n"]},"metadata":{},"sourceType":"module"}