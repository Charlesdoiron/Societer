{"ast":null,"code":"var _jsxFileName = \"/Users/charlesdoiron/Sites/societer/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport Post from \"../components/post.js\";\n\nconst client = require(\"contentful\").createClient({\n  space: \"86i03dw6wwwc\",\n  accessToken: \"fs65wT3qwmrz2Rcyh0fFkJE2uukw1N5mxY9_IzljpH0\"\n});\n\nfunction HomePage() {\n  async function fetchContentTypes() {\n    const types = await client.getContentTypes();\n    if (types.items) return types.items;\n    console.log(\"Error getting Content Types.\");\n  }\n\n  async function fetchEntriesForContentType(contentType) {\n    const entries = await client.getEntries({\n      content_type: contentType.sys.id\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  useEffect(() => {\n    async function getPosts() {\n      const contentTypes = await fetchContentTypes();\n      const allPosts = await fetchEntriesForContentType(contentTypes[0]);\n      setPosts([...allPosts]);\n    }\n\n    getPosts();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Next.js + Contentful\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://css.zeit.sh/v1.css\",\n    type: \"text/css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), posts.length > 0 ? posts.map(p => __jsx(Post, {\n    alt: p.fields.alt,\n    date: p.fields.date,\n    key: p.fields.title,\n    image: p.fields.image,\n    title: p.fields.title,\n    url: p.fields.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })) : null);\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/charlesdoiron/Sites/societer/pages/index.js"],"names":["useEffect","useState","Head","Post","client","require","createClient","space","accessToken","HomePage","fetchContentTypes","types","getContentTypes","items","console","log","fetchEntriesForContentType","contentType","entries","getEntries","content_type","sys","id","name","posts","setPosts","getPosts","contentTypes","allPosts","length","map","p","fields","alt","date","title","image","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAChDC,EAAAA,KAAK,EAAE,cADyC;AAEhDC,EAAAA,WAAW,EAAE;AAFmC,CAAnC,CAAf;;AAKA,SAASC,QAAT,GAAoB;AAClB,iBAAeC,iBAAf,GAAmC;AACjC,UAAMC,KAAK,GAAG,MAAMP,MAAM,CAACQ,eAAP,EAApB;AACA,QAAID,KAAK,CAACE,KAAV,EAAiB,OAAOF,KAAK,CAACE,KAAb;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;;AAED,iBAAeC,0BAAf,CAA0CC,WAA1C,EAAuD;AACrD,UAAMC,OAAO,GAAG,MAAMd,MAAM,CAACe,UAAP,CAAkB;AACtCC,MAAAA,YAAY,EAAEH,WAAW,CAACI,GAAZ,CAAgBC;AADQ,KAAlB,CAAtB;AAGA,QAAIJ,OAAO,CAACL,KAAZ,EAAmB,OAAOK,OAAO,CAACL,KAAf;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BE,WAAW,CAACM,IAAK,GAA1D;AACD;;AAED,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe0B,QAAf,GAA0B;AACxB,YAAMC,YAAY,GAAG,MAAMjB,iBAAiB,EAA5C;AACA,YAAMkB,QAAQ,GAAG,MAAMZ,0BAA0B,CAACW,YAAY,CAAC,CAAD,CAAb,CAAjD;AACAF,MAAAA,QAAQ,CAAC,CAAC,GAAGG,QAAJ,CAAD,CAAR;AACD;;AACDF,IAAAA,QAAQ;AACT,GAPQ,EAON,EAPM,CAAT;AASA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,4BAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASGF,KAAK,CAACK,MAAN,GAAe,CAAf,GACGL,KAAK,CAACM,GAAN,CAAUC,CAAC,IACT,MAAC,IAAD;AACE,IAAA,GAAG,EAAEA,CAAC,CAACC,MAAF,CAASC,GADhB;AAEE,IAAA,IAAI,EAAEF,CAAC,CAACC,MAAF,CAASE,IAFjB;AAGE,IAAA,GAAG,EAAEH,CAAC,CAACC,MAAF,CAASG,KAHhB;AAIE,IAAA,KAAK,EAAEJ,CAAC,CAACC,MAAF,CAASI,KAJlB;AAKE,IAAA,KAAK,EAAEL,CAAC,CAACC,MAAF,CAASG,KALlB;AAME,IAAA,GAAG,EAAEJ,CAAC,CAACC,MAAF,CAASK,GANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAWG,IApBN,CADF;AAwBD;;AAED,eAAe5B,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport Post from \"../components/post.js\";\n\nconst client = require(\"contentful\").createClient({\n  space: \"86i03dw6wwwc\",\n  accessToken: \"fs65wT3qwmrz2Rcyh0fFkJE2uukw1N5mxY9_IzljpH0\"\n});\n\nfunction HomePage() {\n  async function fetchContentTypes() {\n    const types = await client.getContentTypes();\n    if (types.items) return types.items;\n    console.log(\"Error getting Content Types.\");\n  }\n\n  async function fetchEntriesForContentType(contentType) {\n    const entries = await client.getEntries({\n      content_type: contentType.sys.id\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    async function getPosts() {\n      const contentTypes = await fetchContentTypes();\n      const allPosts = await fetchEntriesForContentType(contentTypes[0]);\n      setPosts([...allPosts]);\n    }\n    getPosts();\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Next.js + Contentful</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://css.zeit.sh/v1.css\"\n          type=\"text/css\"\n        />\n      </Head>\n      {posts.length > 0\n        ? posts.map(p => (\n            <Post\n              alt={p.fields.alt}\n              date={p.fields.date}\n              key={p.fields.title}\n              image={p.fields.image}\n              title={p.fields.title}\n              url={p.fields.url}\n            />\n          ))\n        : null}\n    </>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}